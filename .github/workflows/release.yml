name: Release and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - name: Install dependencies for testing
        run: |
          # Install required tools for testing
          sudo apt-get update
          sudo apt-get install -y shellcheck
          
          # Install Node.js and Python (simulating Homebrew dependencies)
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          
          # Install Python and uv
          sudo apt-get install -y python3 python3-pip
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Lint shell scripts
        run: |
          find bin lib -name "*.zsh" -exec shellcheck {} \;

      - name: Run Formula tests
        run: |
          ruby test/formula_test.rb

      - name: Build unified binary
        run: |
          make build

      - name: Run integration tests
        run: |
          bash test/integration_test.sh

  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Update VERSION file
        run: |
          echo "${{ steps.version.outputs.version }}" > VERSION
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install build dependencies
        run: |
          # Install Node.js, Python, and uv for building
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install -y python3 python3-pip
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build distribution
        run: |
          make dist

      - name: Update Formula SHA256
        run: |
          make update-formula

      - name: Commit version changes
        run: |
          git add VERSION Formula/mcp-starter.rb
          git commit -m "Release ${{ steps.version.outputs.tag }}" || exit 0
          git tag -f "${{ steps.version.outputs.tag }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/mcp-starter-${{ steps.version.outputs.version }}.tar.gz
          body: |
            ## MCP Starter ${{ steps.version.outputs.version }}

            Multi-shell MCP server configuration tool for Claude Code.

            ### Installation

            **Homebrew (Recommended):**
            ```bash
            brew tap yourusername/mcp-starter
            brew install mcp-starter
            ```

            **Manual Installation:**
            1. Download the tarball from this release
            2. Extract: `tar -xzf mcp-starter-${{ steps.version.outputs.version }}.tar.gz`
            3. Copy `bin/mcp-starter` to your PATH

            ### Usage

            ```bash
            mcp-starter my-project typescript
            mcp-starter python-app python
            ```

            ### What's New

            See the full changelog below for all changes in this release.

            ### Requirements

            - Node.js and npm
            - Python 3.11+
            - uv package manager
            - OpenAI API key

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: |
          git push origin main
          git push origin "${{ steps.version.outputs.tag }}"

  notify:
    name: Post-Release Notifications
    runs-on: ubuntu-latest
    needs: build-and-release
    if: always()

    steps:
      - name: Notify success
        if: needs.build-and-release.result == 'success'
        run: |
          echo "✅ Release completed successfully!"
          echo "Users can now install with: brew install yourusername/mcp-starter/mcp-starter"

      - name: Notify failure
        if: needs.build-and-release.result == 'failure'
        run: |
          echo "❌ Release failed. Please check the logs and try again."
          exit 1